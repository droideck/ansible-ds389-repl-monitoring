- name: Find all log files in the replication monitoring directory
  ansible.builtin.find:
    paths: "{{ ds389_repl_monitoring_log_dir }}"
    patterns: "access*"
  register: log_files

- name: Check if log files exist
  ansible.builtin.assert:
    that: log_files.files | length > 0
    fail_msg: "No log files found in {{ ds389_repl_monitoring_log_dir }}"

- name: Check log file permissions
  ansible.builtin.stat:
    path: "{{ item.path }}"
  register: log_file_stats
  loop: "{{ log_files.files }}"

- name: Assert log files have expected permissions (can be read)
  ansible.builtin.assert:
    that: log_file_stats.results | map(attribute='stat.mode') | map('regex_search', '^[^0-9]*[4-7][^0-9]*[0-7][0-7][0-7]$') | list
    fail_msg: "Log files in {{ ds389_repl_monitoring_log_dir }} are not readable"
  loop: "{{ log_files.files }}"

- name: Analyze replication logs and write to file for each log file
  ds389_log_parser:
    logfiles: "{{ log_files.files | map(attribute='path') | list }}"
    anonymous: true
    output_file: "{{ ds389_repl_monitoring_tmp_analysis_output_file_path }}"
  loop: "{{ log_files.files }}"
  loop_control:
    loop_var: log_file

- name: Copy dslogs output file to controller with server name in filename
  ansible.builtin.fetch:
    src: "{{ ds389_repl_monitoring_tmp_analysis_output_file_path }}"
    dest: "{{ ds389_repl_monitoring_tmp_analysis_output_file_path }}"
    flat: true

- name: Find analysis output files
  ansible.builtin.find:
    paths: "{{ ds389_repl_monitoring_tmp_path }}"
    patterns: "*_analysis_output.json"
  register: found_files
  delegate_to: localhost
  run_once: true

- name: Set fact for analysis output files paths
  set_fact:
    analysis_output_files: "{{ found_files.files | map(attribute='path') | list }}"

- name: Merge analysis outputs on the controller
  ds389_merge_logs:
    files: "{{ analysis_output_files }}"
    output: "{{ ds389_repl_monitoring_tmp_merged_output_file_path }}"
  delegate_to: localhost
  run_once: true
