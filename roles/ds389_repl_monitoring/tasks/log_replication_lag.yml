- name: Check if there's any data to process
  ansible.builtin.assert:
    that: ds389_repl_monitoring_tmp_merged_output_file_path is defined
    fail_msg: "No data to process"
  run_once: true

- name: Create a directory with current date
  ansible.builtin.file:
    path: "{{ ds389_repl_monitoring_result_dir }}/{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}"
    state: directory
    mode: '0755'
  delegate_to: localhost
  run_once: true

- name: Check if replication lag files exist
  ansible.builtin.stat:
    path: "{{ ds389_repl_monitoring_result_dir }}/{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}/replication_lag.csv"
  register: replication_lag_files
  delegate_to: localhost
  run_once: true

- name: Generate plots out of the replication lag data
  ds389_logs_plot:
    input: "{{ ds389_repl_monitoring_tmp_merged_output_file_path }}"
    csv_output_path: "{{ ds389_repl_monitoring_result_dir }}/{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}/replication_lag.csv"
    png_output_path: "{{ ds389_repl_monitoring_result_dir }}/{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}/replication_lag.png"
    html_output_path: "{{ ds389_repl_monitoring_result_dir }}/{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}/replication_lag.html"
    only_fully_replicated: "{{ ds389_repl_monitoring_only_fully_replicated }}"
    only_not_replicated: "{{ ds389_repl_monitoring_only_not_replicated }}"
    lag_time_lowest: "{{ ds389_repl_monitoring_lag_time_lowest }}"
    etime_lowest: "{{ ds389_repl_monitoring_etime_lowest }}"
    utc_offset: "{{ ds389_repl_monitoring_utc_offset }}"
    repl_lag_threshold: "{{ ds389_repl_monitoring_lag_threshold }}"
    start_time: "{{ ds389_repl_monitoring_start_time }}"
    end_time: "{{ ds389_repl_monitoring_end_time }}"
    suffixes: "{{ ds389_repl_monitoring_suffixes }}"
  delegate_to: localhost
  run_once: true
  when: not replication_lag_files.stat.exists or ds389_repl_monitoring_force_replace_existing
